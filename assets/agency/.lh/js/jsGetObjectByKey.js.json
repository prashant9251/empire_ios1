{
    "sourceFile": "js/jsGetObjectByKey.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 25,
            "patches": [
                {
                    "date": 1638343024263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1638350645947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,8 @@\n var my_awesome_script = document.createElement('script');\n my_awesome_script.setAttribute('src', 'js/jsStoreDatatoIndexeddb.js');\n document.head.appendChild(my_awesome_script);\n var CURRENT_YEAR = Currentyear;\n-var ClDb = DSN.replace(Currentyear, \"\");\n-var clnt = atob(ClDb);\n console.log(clnt);\n Curentyearforlocalstorage = '2122'\n \n \n"
                },
                {
                    "date": 1638350867910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,270 @@\n+function noteError(error) {\n+    $(\"body\").append(error)\n+    console.log(error);\n+    $(\"#loader\").removeClass('has-loader');\n+}\n+var my_awesome_script = document.createElement('script');\n+my_awesome_script.setAttribute('src', 'js/localStorageGet.js');\n+document.head.appendChild(my_awesome_script);\n+\n+var my_awesome_script = document.createElement('script');\n+my_awesome_script.setAttribute('src', 'js/jsgetValueNotDefine.js');\n+document.head.appendChild(my_awesome_script);\n+var my_awesome_script = document.createElement('script');\n+my_awesome_script.setAttribute('src', 'js/jsStoreDatatoIndexeddb.js');\n+document.head.appendChild(my_awesome_script);\n+var CURRENT_YEAR = Currentyear;\n+Curentyearforlocalstorage = '2122'\n+\n+\n+\n+\n+console.log(SyncType)\n+console.log(\"--ONLINE--\" + navigator.onLine);\n+var Enavigator = navigator.onLine;\n+function jsGetObjectByKey(Db, key, OnGetId) {\n+\n+    return new Promise(function (resolve, reject) {\n+        var idb_request;\n+        var data;\n+        idb_request = window.indexedDB.open(Db, 1);\n+\n+        idb_request.addEventListener(\"error\", function (event) {\n+            alert(\"Could not open Indexed DB due to error: \" + this.errorCode);\n+            reject(\"Could not open Indexed DB due to error: \" + this.errorCode);\n+        });\n+        idb_request.addEventListener(\"success\", function (event) {\n+            var database = this.result;\n+            var storage = database\n+                .transaction(key, \"readwrite\")\n+                .objectStore(key);\n+            // console.log(database.objectStoreNames.contains(key));\n+            storage.get(key).addEventListener(\"success\", function (event) {\n+                var result = this.result;\n+                if (key == \"settOTG\") {\n+                    if (result.length == 0) {\n+                        result = {};\n+                        storedatatoIndexdb(DSN, key, JSON.stringify(result)).then(function (data) {\n+                        })\n+                    }\n+                }\n+                if (SyncType == \"LIVE\") {\n+                    // console.log(SyncType);\n+                    getliveData(key).then(function (liveData) {\n+                        if (liveData.length > 0) {\n+                            // console.log(SyncType, liveData)\n+                            resolve(liveData);\n+                            // storedatatoIndexdb(DSN, key, JSON.stringify(liveData)).then(function (data) {\n+                            // }, function (error) {\n+                            // });\n+                        }\n+                    }).catch(function (err) {\n+                        console.log(key, err);\n+                        resolve(result);\n+                    })\n+                } else {\n+                    resolve(result);\n+                }\n+            });\n+        });\n+    });\n+}\n+// getliveData()\n+firebaseDirpath = 'forUnique' + \"/\" + atob(ClDb) + \"/\" + ClDb + \"/\" + Currentyear + \"/\"\n+function getliveData(key, Data) {\n+    path = firebaseDirpath + key;\n+    return new Promise(function (resolve, reject) {\n+        firebase.database().ref(path).on('value', (snapshot) => {\n+            const data = snapshot.val();\n+            // console.log(data);\n+            resolve(data);\n+        }, function (error) {\n+            reject(\"Error: \" + error.code);\n+        });\n+    })\n+}\n+\n+\n+\n+var filename = url.substring(url.lastIndexOf('/') + 1);\n+toIndex = filename.indexOf(\".html\");\n+filename = filename.substring(0, toIndex);\n+var CurrentPageSett\n+var tempSettings = [{ \"view\": true, \"key\": \"TYPE\", \"id\": \"TYPE\", \"Caption\": \"TYPE\", \"cal\": \"\" },\n+{ \"view\": true, \"key\": \"FRM\", \"id\": \"FRM\", \"Caption\": \"FIRM\", \"cal\": \"\" },\n+{ \"view\": true, \"key\": \"GROUP\", \"id\": \"GROUP\", \"Caption\": \"GROUP\", \"cal\": \"\" }];\n+\n+function viewVal(key) {\n+    return CurrentPageSett.filter(function (d) {\n+        return d.key == key;\n+    })\n+}\n+\n+function openSettingForm(sett) {\n+    var modelDiv = `<div id=\"popUpModelSettings\" class=\"modal\">\n+                <div class=\"modal-content\">\n+                <div class=\"modal-header\">\n+                    <div style=\"display:flex;width:100%;\">\n+                        <div style=\"width:50%\">\n+                        <h2 id=\"mdlPartyName\" style=\"margin-top: 0;\">View Setting</h2>\n+                        </div>\n+                        <div style=\"width:50%\">\n+                        <span class=\"close\" onclick=\"document.getElementById('popUpModelSettings').style.display = 'none'\">&times;</span>\n+                        </div>\n+                    </div>\n+                    \n+                    \n+                </div>\n+                <div class=\"modal-body\" align=\"center\">\n+                <table style=\"padding:5px;\"align=\"center\">`;\n+\n+    if (sett.length > 0) {\n+        var sr = 0;\n+        modelDiv += `\n+        <tr>\n+        <th>SR</th>\n+        <th>FIELD</th>\n+        <th></th>\n+        </tr>`;\n+        for (var i = 0; i < sett.length; i++) {\n+            var check = '';\n+            var savedSetting = viewVal(sett[i].key);\n+            if (savedSetting.length > 0) {\n+                if (savedSetting[0].view) {\n+                    check = \"checked\";\n+                }\n+            } else {\n+                if (sett[i].view) {\n+                    check = \"checked\";\n+                }\n+            }\n+            sr = i + 1\n+            modelDiv += `\n+        <tr >\n+        <td>` + sr + `-</td>\n+        <td>` + sett[i].nodeName + `</td>\n+        <td><input type=\"checkbox\" \n+        onchange=\"settingSave('` + sett[i].id + `','` + sett[i].key + `','` + sett[i].Caption + `',this);\n+        \"key=\"` + sett[i].key + `\" Caption=\"` + sett[i].Caption + `\" \n+        id=\"` + sett[i].key + `\" ` + check + `/>&nbsp</td>\n+        </tr>  \n+         `;\n+        }\n+    }\n+    modelDiv += `\n+            </table>\n+            </div>\n+            <div class=\"modal-footer\" align=\"center\">\n+            </div>\n+            </div>\n+            </div>`;\n+\n+\n+    $('body').append(modelDiv);\n+    // showhideUnhide();\n+\n+}\n+function showhideUnhide() {\n+    try {\n+        var modal = document.getElementById(\"popUpModelSettings\");\n+        modal.style.display = \"block\";\n+    } catch (error) {\n+\n+    }\n+}\n+\n+function hide() {\n+    try {\n+\n+        if (CurrentPageSett.length > 0) {\n+            for (var j = 0; j < CurrentPageSett.length; j++) {\n+                if (CurrentPageSett[j].view) {\n+                    $(\".hide\" + CurrentPageSett[j].key).css(\"display\", \"\");\n+                } else {\n+                    $(\".hide\" + CurrentPageSett[j].key).css(\"display\", \"none\");\n+                }\n+            }\n+        }\n+    } catch (error) {\n+\n+    }\n+}\n+\n+var SettingByClass = []; var SettingByClassFlag = [];\n+function hideList() {\n+    jsGetObjectByKey(DSN, \"settOTG\", \"\").then(function (data) {\n+        settings = data\n+        CurrentPageSett = settings[filename];\n+        tempSettings = document.querySelectorAll('*[class]');\n+        console.log(tempSettings);\n+        for (var i = 0; i < tempSettings.length; i++) {\n+            if (tempSettings[i].className.indexOf('hide') > -1 && tempSettings[i].className.indexOf('hideAbleTr') < 0 && tempSettings[i].className.indexOf('unhideAbleTr') < 0) {\n+                // console.log(tempSettings[i].nodeName)\n+                var obj = {};\n+                var key = tempSettings[i].className.replace(\"hide\", \"\");\n+                if (key.indexOf(\" \") > -1) {\n+                    key = key.substring(0, key.indexOf(\" \"));\n+                }\n+                obj.key = key;\n+                obj.id = key;\n+                var className = tempSettings[i].className;\n+                if (className.indexOf(\" \") > -1) {\n+                    className = className.substring(0, className.indexOf(\" \"));\n+                }\n+                obj.class = className;\n+                obj.Caption = \"\";\n+                obj.nodeName = tempSettings[i].outerText;\n+                var display = tempSettings[i].style.display;\n+                if (display == \"none\") {\n+                    obj.view = false;\n+                } else {\n+                    obj.view = true;\n+                }\n+                if (!SettingByClassFlag[key]) {\n+                    SettingByClass.push(obj);\n+                    SettingByClassFlag[key] = true;\n+                }\n+            }\n+        }\n+        console.table(SettingByClass)\n+        if (settings[filename] == undefined || settings[filename] == null) {\n+            CurrentPageSett = SettingByClass;\n+            settings[filename] = CurrentPageSett;\n+            // console.log(settings[filename], settings);\n+            storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify(settings)).then(function (data) {\n+            })\n+        }\n+        // storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify([])).then(function (data) {\n+        // })\n+        openSettingForm(SettingByClass)\n+        hide();\n+    });\n+}\n+\n+function settingSave(id, key, caption, ele) {\n+    var found = false;\n+    for (var i = 0; i < CurrentPageSett.length; i++) {\n+        if (CurrentPageSett[i][\"id\"] == id) {\n+            CurrentPageSett[i][\"key\"] = key;\n+            CurrentPageSett[i][\"Caption\"] = caption;\n+            CurrentPageSett[i][\"view\"] = ele.checked;\n+            found = true;\n+        }\n+    }\n+    if (!found) {\n+        var obj = {};\n+        obj[\"id\"] = id;\n+        obj[\"key\"] = key;\n+        obj[\"Caption\"] = caption;\n+        obj[\"view\"] = ele.checked;\n+        CurrentPageSett.push(obj);\n+    }\n+    console.table(CurrentPageSett)\n+    settings[filename] = CurrentPageSett;\n+    storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify(settings)).then(function (data) {\n+    })\n+    hide();\n+}\n+\n+\n+\n"
                },
                {
                    "date": 1638350878535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,267 @@\n+function noteError(error){\n+    $(\"body\").append(error)\n+    console.log(error);\n+    $(\"#loader\").removeClass('has-loader');\n+  }\n+  \n+var my_awesome_script = document.createElement('script');\n+my_awesome_script.setAttribute('src', 'js/jsgetValueNotDefine.js');\n+document.head.appendChild(my_awesome_script);\n+var my_awesome_script = document.createElement('script');\n+my_awesome_script.setAttribute('src', 'js/jsStoreDatatoIndexeddb.js');\n+document.head.appendChild(my_awesome_script);\n+var CURRENT_YEAR = Currentyear;\n+Curentyearforlocalstorage = '2122'\n+\n+\n+\n+\n+console.log(SyncType)\n+console.log(\"--ONLINE--\" + navigator.onLine);\n+var Enavigator = navigator.onLine;\n+function jsGetObjectByKey(Db, key, OnGetId) {\n+\n+    return new Promise(function (resolve, reject) {\n+        var idb_request;\n+        var data;\n+        idb_request = window.indexedDB.open(Db, 1);\n+\n+        idb_request.addEventListener(\"error\", function (event) {\n+            alert(\"Could not open Indexed DB due to error: \" + this.errorCode);\n+            reject(\"Could not open Indexed DB due to error: \" + this.errorCode);\n+        });\n+        idb_request.addEventListener(\"success\", function (event) {\n+            var database = this.result;\n+            var storage = database\n+                .transaction(key, \"readwrite\")\n+                .objectStore(key);\n+            // console.log(database.objectStoreNames.contains(key));\n+            storage.get(key).addEventListener(\"success\", function (event) {\n+                var result = this.result;\n+                if (key == \"settOTG\") {\n+                    if (result.length == 0) {\n+                        result = {};\n+                        storedatatoIndexdb(DSN, key, JSON.stringify(result)).then(function (data) {\n+                        })\n+                    }\n+                }\n+                if (SyncType == \"LIVE\") {\n+                    // console.log(SyncType);\n+                    getliveData(key).then(function (liveData) {\n+                        if (liveData.length > 0) {\n+                            // console.log(SyncType, liveData)\n+                            resolve(liveData);\n+                            // storedatatoIndexdb(DSN, key, JSON.stringify(liveData)).then(function (data) {\n+                            // }, function (error) {\n+                            // });\n+                        }\n+                    }).catch(function (err) {\n+                        console.log(key, err);\n+                        resolve(result);\n+                    })\n+                } else {\n+                    resolve(result);\n+                }\n+            });\n+        });\n+    });\n+}\n+// getliveData()\n+firebaseDirpath = 'forUnique' + \"/\" + atob(ClDb) + \"/\" + ClDb + \"/\" + Currentyear + \"/\"\n+function getliveData(key, Data) {\n+    path = firebaseDirpath + key;\n+    return new Promise(function (resolve, reject) {\n+        firebase.database().ref(path).on('value', (snapshot) => {\n+            const data = snapshot.val();\n+            // console.log(data);\n+            resolve(data);\n+        }, function (error) {\n+            reject(\"Error: \" + error.code);\n+        });\n+    })\n+}\n+\n+\n+\n+var filename = url.substring(url.lastIndexOf('/') + 1);\n+toIndex = filename.indexOf(\".html\");\n+filename = filename.substring(0, toIndex);\n+var CurrentPageSett\n+var tempSettings = [{ \"view\": true, \"key\": \"TYPE\", \"id\": \"TYPE\", \"Caption\": \"TYPE\", \"cal\": \"\" },\n+{ \"view\": true, \"key\": \"FRM\", \"id\": \"FRM\", \"Caption\": \"FIRM\", \"cal\": \"\" },\n+{ \"view\": true, \"key\": \"GROUP\", \"id\": \"GROUP\", \"Caption\": \"GROUP\", \"cal\": \"\" }];\n+\n+function viewVal(key) {\n+    return CurrentPageSett.filter(function (d) {\n+        return d.key == key;\n+    })\n+}\n+\n+function openSettingForm(sett) {\n+    var modelDiv = `<div id=\"popUpModelSettings\" class=\"modal\">\n+                <div class=\"modal-content\">\n+                <div class=\"modal-header\">\n+                    <div style=\"display:flex;width:100%;\">\n+                        <div style=\"width:50%\">\n+                        <h2 id=\"mdlPartyName\" style=\"margin-top: 0;\">View Setting</h2>\n+                        </div>\n+                        <div style=\"width:50%\">\n+                        <span class=\"close\" onclick=\"document.getElementById('popUpModelSettings').style.display = 'none'\">&times;</span>\n+                        </div>\n+                    </div>\n+                    \n+                    \n+                </div>\n+                <div class=\"modal-body\" align=\"center\">\n+                <table style=\"padding:5px;\"align=\"center\">`;\n+\n+    if (sett.length > 0) {\n+        var sr = 0;\n+        modelDiv += `\n+        <tr>\n+        <th>SR</th>\n+        <th>FIELD</th>\n+        <th></th>\n+        </tr>`;\n+        for (var i = 0; i < sett.length; i++) {\n+            var check = '';\n+            var savedSetting = viewVal(sett[i].key);\n+            if (savedSetting.length > 0) {\n+                if (savedSetting[0].view) {\n+                    check = \"checked\";\n+                }\n+            } else {\n+                if (sett[i].view) {\n+                    check = \"checked\";\n+                }\n+            }\n+            sr = i + 1\n+            modelDiv += `\n+        <tr >\n+        <td>` + sr + `-</td>\n+        <td>` + sett[i].nodeName + `</td>\n+        <td><input type=\"checkbox\" \n+        onchange=\"settingSave('` + sett[i].id + `','` + sett[i].key + `','` + sett[i].Caption + `',this);\n+        \"key=\"` + sett[i].key + `\" Caption=\"` + sett[i].Caption + `\" \n+        id=\"` + sett[i].key + `\" ` + check + `/>&nbsp</td>\n+        </tr>  \n+         `;\n+        }\n+    }\n+    modelDiv += `\n+            </table>\n+            </div>\n+            <div class=\"modal-footer\" align=\"center\">\n+            </div>\n+            </div>\n+            </div>`;\n+\n+\n+    $('body').append(modelDiv);\n+    // showhideUnhide();\n+\n+}\n+function showhideUnhide() {\n+    try {\n+        var modal = document.getElementById(\"popUpModelSettings\");\n+        modal.style.display = \"block\";\n+    } catch (error) {\n+\n+    }\n+}\n+\n+function hide() {\n+    try {\n+\n+        if (CurrentPageSett.length > 0) {\n+            for (var j = 0; j < CurrentPageSett.length; j++) {\n+                if (CurrentPageSett[j].view) {\n+                    $(\".hide\" + CurrentPageSett[j].key).css(\"display\", \"\");\n+                } else {\n+                    $(\".hide\" + CurrentPageSett[j].key).css(\"display\", \"none\");\n+                }\n+            }\n+        }\n+    } catch (error) {\n+\n+    }\n+}\n+\n+var SettingByClass = []; var SettingByClassFlag = [];\n+function hideList() {\n+    jsGetObjectByKey(DSN, \"settOTG\", \"\").then(function (data) {\n+        settings = data\n+        CurrentPageSett = settings[filename];\n+        tempSettings = document.querySelectorAll('*[class]');\n+        console.log(tempSettings);\n+        for (var i = 0; i < tempSettings.length; i++) {\n+            if (tempSettings[i].className.indexOf('hide') > -1 && tempSettings[i].className.indexOf('hideAbleTr') < 0 && tempSettings[i].className.indexOf('unhideAbleTr') < 0) {\n+                // console.log(tempSettings[i].nodeName)\n+                var obj = {};\n+                var key = tempSettings[i].className.replace(\"hide\", \"\");\n+                if (key.indexOf(\" \") > -1) {\n+                    key = key.substring(0, key.indexOf(\" \"));\n+                }\n+                obj.key = key;\n+                obj.id = key;\n+                var className = tempSettings[i].className;\n+                if (className.indexOf(\" \") > -1) {\n+                    className = className.substring(0, className.indexOf(\" \"));\n+                }\n+                obj.class = className;\n+                obj.Caption = \"\";\n+                obj.nodeName = tempSettings[i].outerText;\n+                var display = tempSettings[i].style.display;\n+                if (display == \"none\") {\n+                    obj.view = false;\n+                } else {\n+                    obj.view = true;\n+                }\n+                if (!SettingByClassFlag[key]) {\n+                    SettingByClass.push(obj);\n+                    SettingByClassFlag[key] = true;\n+                }\n+            }\n+        }\n+        console.table(SettingByClass)\n+        if (settings[filename] == undefined || settings[filename] == null) {\n+            CurrentPageSett = SettingByClass;\n+            settings[filename] = CurrentPageSett;\n+            // console.log(settings[filename], settings);\n+            storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify(settings)).then(function (data) {\n+            })\n+        }\n+        // storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify([])).then(function (data) {\n+        // })\n+        openSettingForm(SettingByClass)\n+        hide();\n+    });\n+}\n+\n+function settingSave(id, key, caption, ele) {\n+    var found = false;\n+    for (var i = 0; i < CurrentPageSett.length; i++) {\n+        if (CurrentPageSett[i][\"id\"] == id) {\n+            CurrentPageSett[i][\"key\"] = key;\n+            CurrentPageSett[i][\"Caption\"] = caption;\n+            CurrentPageSett[i][\"view\"] = ele.checked;\n+            found = true;\n+        }\n+    }\n+    if (!found) {\n+        var obj = {};\n+        obj[\"id\"] = id;\n+        obj[\"key\"] = key;\n+        obj[\"Caption\"] = caption;\n+        obj[\"view\"] = ele.checked;\n+        CurrentPageSett.push(obj);\n+    }\n+    console.table(CurrentPageSett)\n+    settings[filename] = CurrentPageSett;\n+    storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify(settings)).then(function (data) {\n+    })\n+    hide();\n+}\n+\n+\n+\n"
                },
                {
                    "date": 1638350918985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,267 @@\n+function noteError(error){\n+    $(\"body\").append(error)\n+    console.log(error);\n+    $(\"#loader\").removeClass('has-loader');\n+  }\n+  \n+var my_awesome_script = document.createElement('script');\n+my_awesome_script.setAttribute('src', 'js/jsgetValueNotDefine.js');\n+document.head.appendChild(my_awesome_script);\n+var my_awesome_script = document.createElement('script');\n+my_awesome_script.setAttribute('src', 'js/jsStoreDatatoIndexeddb.js');\n+document.head.appendChild(my_awesome_script);\n+var CURRENT_YEAR = Currentyear;\n+Curentyearforlocalstorage = '2122'\n+\n+\n+\n+\n+console.log(SyncType)\n+console.log(\"--ONLINE--\" + navigator.onLine);\n+var Enavigator = navigator.onLine;\n+function jsGetObjectByKey(Db, key, OnGetId) {\n+\n+    return new Promise(function (resolve, reject) {\n+        var idb_request;\n+        var data;\n+        idb_request = window.indexedDB.open(Db, 1);\n+\n+        idb_request.addEventListener(\"error\", function (event) {\n+            alert(\"Could not open Indexed DB due to error: \" + this.errorCode);\n+            reject(\"Could not open Indexed DB due to error: \" + this.errorCode);\n+        });\n+        idb_request.addEventListener(\"success\", function (event) {\n+            var database = this.result;\n+            var storage = database\n+                .transaction(key, \"readwrite\")\n+                .objectStore(key);\n+            // console.log(database.objectStoreNames.contains(key));\n+            storage.get(key).addEventListener(\"success\", function (event) {\n+                var result = this.result;\n+                if (key == \"settOTG\") {\n+                    if (result.length == 0) {\n+                        result = {};\n+                        storedatatoIndexdb(DSN, key, JSON.stringify(result)).then(function (data) {\n+                        })\n+                    }\n+                }\n+                if (SyncType == \"LIVE\") {\n+                    // console.log(SyncType);\n+                    getliveData(key).then(function (liveData) {\n+                        if (liveData.length > 0) {\n+                            // console.log(SyncType, liveData)\n+                            resolve(liveData);\n+                            // storedatatoIndexdb(DSN, key, JSON.stringify(liveData)).then(function (data) {\n+                            // }, function (error) {\n+                            // });\n+                        }\n+                    }).catch(function (err) {\n+                        console.log(key, err);\n+                        resolve(result);\n+                    })\n+                } else {\n+                    resolve(result);\n+                }\n+            });\n+        });\n+    });\n+}\n+// getliveData()\n+firebaseDirpath = 'forUnique' + \"/\" + atob(ClDb) + \"/\" + ClDb + \"/\" + Currentyear + \"/\"\n+function getliveData(key, Data) {\n+    path = firebaseDirpath + key;\n+    return new Promise(function (resolve, reject) {\n+        firebase.database().ref(path).on('value', (snapshot) => {\n+            const data = snapshot.val();\n+            // console.log(data);\n+            resolve(data);\n+        }, function (error) {\n+            reject(\"Error: \" + error.code);\n+        });\n+    })\n+}\n+\n+\n+\n+var filename = url.substring(url.lastIndexOf('/') + 1);\n+toIndex = filename.indexOf(\".html\");\n+filename = filename.substring(0, toIndex);\n+var CurrentPageSett\n+var tempSettings = [{ \"view\": true, \"key\": \"TYPE\", \"id\": \"TYPE\", \"Caption\": \"TYPE\", \"cal\": \"\" },\n+{ \"view\": true, \"key\": \"FRM\", \"id\": \"FRM\", \"Caption\": \"FIRM\", \"cal\": \"\" },\n+{ \"view\": true, \"key\": \"GROUP\", \"id\": \"GROUP\", \"Caption\": \"GROUP\", \"cal\": \"\" }];\n+\n+function viewVal(key) {\n+    return CurrentPageSett.filter(function (d) {\n+        return d.key == key;\n+    })\n+}\n+\n+function openSettingForm(sett) {\n+    var modelDiv = `<div id=\"popUpModelSettings\" class=\"modal\">\n+                <div class=\"modal-content\">\n+                <div class=\"modal-header\">\n+                    <div style=\"display:flex;width:100%;\">\n+                        <div style=\"width:50%\">\n+                        <h2 id=\"mdlPartyName\" style=\"margin-top: 0;\">View Setting</h2>\n+                        </div>\n+                        <div style=\"width:50%\">\n+                        <span class=\"close\" onclick=\"document.getElementById('popUpModelSettings').style.display = 'none'\">&times;</span>\n+                        </div>\n+                    </div>\n+                    \n+                    \n+                </div>\n+                <div class=\"modal-body\" align=\"center\">\n+                <table style=\"padding:5px;\"align=\"center\">`;\n+\n+    if (sett.length > 0) {\n+        var sr = 0;\n+        modelDiv += `\n+        <tr>\n+        <th>SR</th>\n+        <th>FIELD</th>\n+        <th></th>\n+        </tr>`;\n+        for (var i = 0; i < sett.length; i++) {\n+            var check = '';\n+            var savedSetting = viewVal(sett[i].key);\n+            if (savedSetting.length > 0) {\n+                if (savedSetting[0].view) {\n+                    check = \"checked\";\n+                }\n+            } else {\n+                if (sett[i].view) {\n+                    check = \"checked\";\n+                }\n+            }\n+            sr = i + 1\n+            modelDiv += `\n+        <tr >\n+        <td>` + sr + `-</td>\n+        <td>` + sett[i].nodeName + `</td>\n+        <td><input type=\"checkbox\" \n+        onchange=\"settingSave('` + sett[i].id + `','` + sett[i].key + `','` + sett[i].Caption + `',this);\n+        \"key=\"` + sett[i].key + `\" Caption=\"` + sett[i].Caption + `\" \n+        id=\"` + sett[i].key + `\" ` + check + `/>&nbsp</td>\n+        </tr>  \n+         `;\n+        }\n+    }\n+    modelDiv += `\n+            </table>\n+            </div>\n+            <div class=\"modal-footer\" align=\"center\">\n+            </div>\n+            </div>\n+            </div>`;\n+\n+\n+    $('body').append(modelDiv);\n+    // showhideUnhide();\n+\n+}\n+function showhideUnhide() {\n+    try {\n+        var modal = document.getElementById(\"popUpModelSettings\");\n+        modal.style.display = \"block\";\n+    } catch (error) {\n+\n+    }\n+}\n+\n+function hide() {\n+    try {\n+\n+        if (CurrentPageSett.length > 0) {\n+            for (var j = 0; j < CurrentPageSett.length; j++) {\n+                if (CurrentPageSett[j].view) {\n+                    $(\".hide\" + CurrentPageSett[j].key).css(\"display\", \"\");\n+                } else {\n+                    $(\".hide\" + CurrentPageSett[j].key).css(\"display\", \"none\");\n+                }\n+            }\n+        }\n+    } catch (error) {\n+\n+    }\n+}\n+\n+var SettingByClass = []; var SettingByClassFlag = [];\n+function hideList() {\n+    jsGetObjectByKey(DSN, \"settOTG\", \"\").then(function (data) {\n+        settings = data\n+        CurrentPageSett = settings[filename];\n+        tempSettings = document.querySelectorAll('*[class]');\n+        console.log(tempSettings);\n+        for (var i = 0; i < tempSettings.length; i++) {\n+            if (tempSettings[i].className.indexOf('hide') > -1 && tempSettings[i].className.indexOf('hideAbleTr') < 0 && tempSettings[i].className.indexOf('unhideAbleTr') < 0) {\n+                // console.log(tempSettings[i].nodeName)\n+                var obj = {};\n+                var key = tempSettings[i].className.replace(\"hide\", \"\");\n+                if (key.indexOf(\" \") > -1) {\n+                    key = key.substring(0, key.indexOf(\" \"));\n+                }\n+                obj.key = key;\n+                obj.id = key;\n+                var className = tempSettings[i].className;\n+                if (className.indexOf(\" \") > -1) {\n+                    className = className.substring(0, className.indexOf(\" \"));\n+                }\n+                obj.class = className;\n+                obj.Caption = \"\";\n+                obj.nodeName = tempSettings[i].outerText;\n+                var display = tempSettings[i].style.display;\n+                if (display == \"none\") {\n+                    obj.view = false;\n+                } else {\n+                    obj.view = true;\n+                }\n+                if (!SettingByClassFlag[key]) {\n+                    SettingByClass.push(obj);\n+                    SettingByClassFlag[key] = true;\n+                }\n+            }\n+        }\n+        console.table(SettingByClass)\n+        if (settings[filename] == undefined || settings[filename] == null) {\n+            CurrentPageSett = SettingByClass;\n+            settings[filename] = CurrentPageSett;\n+            // console.log(settings[filename], settings);\n+            storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify(settings)).then(function (data) {\n+            })\n+        }\n+        // storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify([])).then(function (data) {\n+        // })\n+        openSettingForm(SettingByClass)\n+        hide();\n+    });\n+}\n+\n+function settingSave(id, key, caption, ele) {\n+    var found = false;\n+    for (var i = 0; i < CurrentPageSett.length; i++) {\n+        if (CurrentPageSett[i][\"id\"] == id) {\n+            CurrentPageSett[i][\"key\"] = key;\n+            CurrentPageSett[i][\"Caption\"] = caption;\n+            CurrentPageSett[i][\"view\"] = ele.checked;\n+            found = true;\n+        }\n+    }\n+    if (!found) {\n+        var obj = {};\n+        obj[\"id\"] = id;\n+        obj[\"key\"] = key;\n+        obj[\"Caption\"] = caption;\n+        obj[\"view\"] = ele.checked;\n+        CurrentPageSett.push(obj);\n+    }\n+    console.table(CurrentPageSett)\n+    settings[filename] = CurrentPageSett;\n+    storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify(settings)).then(function (data) {\n+    })\n+    hide();\n+}\n+\n+\n+\n"
                },
                {
                    "date": 1639727949593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n-function noteError(error){\n-    $(\"body\").append(error)\n-    console.log(error);\n+function noteError(e){\n+    $(\"body\").append(e.stack)\n+    $(\"body\").append(e.onLine)\n     $(\"#loader\").removeClass('has-loader');\n   }\n   \n var my_awesome_script = document.createElement('script');\n@@ -264,808 +264,4 @@\n }\n \n \n \n-function noteError(error){\n-    $(\"body\").append(error)\n-    console.log(error);\n-    $(\"#loader\").removeClass('has-loader');\n-  }\n-  \n-var my_awesome_script = document.createElement('script');\n-my_awesome_script.setAttribute('src', 'js/jsgetValueNotDefine.js');\n-document.head.appendChild(my_awesome_script);\n-var my_awesome_script = document.createElement('script');\n-my_awesome_script.setAttribute('src', 'js/jsStoreDatatoIndexeddb.js');\n-document.head.appendChild(my_awesome_script);\n-var CURRENT_YEAR = Currentyear;\n-Curentyearforlocalstorage = '2122'\n-\n-\n-\n-\n-console.log(SyncType)\n-console.log(\"--ONLINE--\" + navigator.onLine);\n-var Enavigator = navigator.onLine;\n-function jsGetObjectByKey(Db, key, OnGetId) {\n-\n-    return new Promise(function (resolve, reject) {\n-        var idb_request;\n-        var data;\n-        idb_request = window.indexedDB.open(Db, 1);\n-\n-        idb_request.addEventListener(\"error\", function (event) {\n-            alert(\"Could not open Indexed DB due to error: \" + this.errorCode);\n-            reject(\"Could not open Indexed DB due to error: \" + this.errorCode);\n-        });\n-        idb_request.addEventListener(\"success\", function (event) {\n-            var database = this.result;\n-            var storage = database\n-                .transaction(key, \"readwrite\")\n-                .objectStore(key);\n-            // console.log(database.objectStoreNames.contains(key));\n-            storage.get(key).addEventListener(\"success\", function (event) {\n-                var result = this.result;\n-                if (key == \"settOTG\") {\n-                    if (result.length == 0) {\n-                        result = {};\n-                        storedatatoIndexdb(DSN, key, JSON.stringify(result)).then(function (data) {\n-                        })\n-                    }\n-                }\n-                if (SyncType == \"LIVE\") {\n-                    // console.log(SyncType);\n-                    getliveData(key).then(function (liveData) {\n-                        if (liveData.length > 0) {\n-                            // console.log(SyncType, liveData)\n-                            resolve(liveData);\n-                            // storedatatoIndexdb(DSN, key, JSON.stringify(liveData)).then(function (data) {\n-                            // }, function (error) {\n-                            // });\n-                        }\n-                    }).catch(function (err) {\n-                        console.log(key, err);\n-                        resolve(result);\n-                    })\n-                } else {\n-                    resolve(result);\n-                }\n-            });\n-        });\n-    });\n-}\n-// getliveData()\n-firebaseDirpath = 'forUnique' + \"/\" + atob(ClDb) + \"/\" + ClDb + \"/\" + Currentyear + \"/\"\n-function getliveData(key, Data) {\n-    path = firebaseDirpath + key;\n-    return new Promise(function (resolve, reject) {\n-        firebase.database().ref(path).on('value', (snapshot) => {\n-            const data = snapshot.val();\n-            // console.log(data);\n-            resolve(data);\n-        }, function (error) {\n-            reject(\"Error: \" + error.code);\n-        });\n-    })\n-}\n-\n-\n-\n-var filename = url.substring(url.lastIndexOf('/') + 1);\n-toIndex = filename.indexOf(\".html\");\n-filename = filename.substring(0, toIndex);\n-var CurrentPageSett\n-var tempSettings = [{ \"view\": true, \"key\": \"TYPE\", \"id\": \"TYPE\", \"Caption\": \"TYPE\", \"cal\": \"\" },\n-{ \"view\": true, \"key\": \"FRM\", \"id\": \"FRM\", \"Caption\": \"FIRM\", \"cal\": \"\" },\n-{ \"view\": true, \"key\": \"GROUP\", \"id\": \"GROUP\", \"Caption\": \"GROUP\", \"cal\": \"\" }];\n-\n-function viewVal(key) {\n-    return CurrentPageSett.filter(function (d) {\n-        return d.key == key;\n-    })\n-}\n-\n-function openSettingForm(sett) {\n-    var modelDiv = `<div id=\"popUpModelSettings\" class=\"modal\">\n-                <div class=\"modal-content\">\n-                <div class=\"modal-header\">\n-                    <div style=\"display:flex;width:100%;\">\n-                        <div style=\"width:50%\">\n-                        <h2 id=\"mdlPartyName\" style=\"margin-top: 0;\">View Setting</h2>\n-                        </div>\n-                        <div style=\"width:50%\">\n-                        <span class=\"close\" onclick=\"document.getElementById('popUpModelSettings').style.display = 'none'\">&times;</span>\n-                        </div>\n-                    </div>\n-                    \n-                    \n-                </div>\n-                <div class=\"modal-body\" align=\"center\">\n-                <table style=\"padding:5px;\"align=\"center\">`;\n-\n-    if (sett.length > 0) {\n-        var sr = 0;\n-        modelDiv += `\n-        <tr>\n-        <th>SR</th>\n-        <th>FIELD</th>\n-        <th></th>\n-        </tr>`;\n-        for (var i = 0; i < sett.length; i++) {\n-            var check = '';\n-            var savedSetting = viewVal(sett[i].key);\n-            if (savedSetting.length > 0) {\n-                if (savedSetting[0].view) {\n-                    check = \"checked\";\n-                }\n-            } else {\n-                if (sett[i].view) {\n-                    check = \"checked\";\n-                }\n-            }\n-            sr = i + 1\n-            modelDiv += `\n-        <tr >\n-        <td>` + sr + `-</td>\n-        <td>` + sett[i].nodeName + `</td>\n-        <td><input type=\"checkbox\" \n-        onchange=\"settingSave('` + sett[i].id + `','` + sett[i].key + `','` + sett[i].Caption + `',this);\n-        \"key=\"` + sett[i].key + `\" Caption=\"` + sett[i].Caption + `\" \n-        id=\"` + sett[i].key + `\" ` + check + `/>&nbsp</td>\n-        </tr>  \n-         `;\n-        }\n-    }\n-    modelDiv += `\n-            </table>\n-            </div>\n-            <div class=\"modal-footer\" align=\"center\">\n-            </div>\n-            </div>\n-            </div>`;\n-\n-\n-    $('body').append(modelDiv);\n-    // showhideUnhide();\n-\n-}\n-function showhideUnhide() {\n-    try {\n-        var modal = document.getElementById(\"popUpModelSettings\");\n-        modal.style.display = \"block\";\n-    } catch (error) {\n-\n-    }\n-}\n-\n-function hide() {\n-    try {\n-\n-        if (CurrentPageSett.length > 0) {\n-            for (var j = 0; j < CurrentPageSett.length; j++) {\n-                if (CurrentPageSett[j].view) {\n-                    $(\".hide\" + CurrentPageSett[j].key).css(\"display\", \"\");\n-                } else {\n-                    $(\".hide\" + CurrentPageSett[j].key).css(\"display\", \"none\");\n-                }\n-            }\n-        }\n-    } catch (error) {\n-\n-    }\n-}\n-\n-var SettingByClass = []; var SettingByClassFlag = [];\n-function hideList() {\n-    jsGetObjectByKey(DSN, \"settOTG\", \"\").then(function (data) {\n-        settings = data\n-        CurrentPageSett = settings[filename];\n-        tempSettings = document.querySelectorAll('*[class]');\n-        console.log(tempSettings);\n-        for (var i = 0; i < tempSettings.length; i++) {\n-            if (tempSettings[i].className.indexOf('hide') > -1 && tempSettings[i].className.indexOf('hideAbleTr') < 0 && tempSettings[i].className.indexOf('unhideAbleTr') < 0) {\n-                // console.log(tempSettings[i].nodeName)\n-                var obj = {};\n-                var key = tempSettings[i].className.replace(\"hide\", \"\");\n-                if (key.indexOf(\" \") > -1) {\n-                    key = key.substring(0, key.indexOf(\" \"));\n-                }\n-                obj.key = key;\n-                obj.id = key;\n-                var className = tempSettings[i].className;\n-                if (className.indexOf(\" \") > -1) {\n-                    className = className.substring(0, className.indexOf(\" \"));\n-                }\n-                obj.class = className;\n-                obj.Caption = \"\";\n-                obj.nodeName = tempSettings[i].outerText;\n-                var display = tempSettings[i].style.display;\n-                if (display == \"none\") {\n-                    obj.view = false;\n-                } else {\n-                    obj.view = true;\n-                }\n-                if (!SettingByClassFlag[key]) {\n-                    SettingByClass.push(obj);\n-                    SettingByClassFlag[key] = true;\n-                }\n-            }\n-        }\n-        console.table(SettingByClass)\n-        if (settings[filename] == undefined || settings[filename] == null) {\n-            CurrentPageSett = SettingByClass;\n-            settings[filename] = CurrentPageSett;\n-            // console.log(settings[filename], settings);\n-            storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify(settings)).then(function (data) {\n-            })\n-        }\n-        // storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify([])).then(function (data) {\n-        // })\n-        openSettingForm(SettingByClass)\n-        hide();\n-    });\n-}\n-\n-function settingSave(id, key, caption, ele) {\n-    var found = false;\n-    for (var i = 0; i < CurrentPageSett.length; i++) {\n-        if (CurrentPageSett[i][\"id\"] == id) {\n-            CurrentPageSett[i][\"key\"] = key;\n-            CurrentPageSett[i][\"Caption\"] = caption;\n-            CurrentPageSett[i][\"view\"] = ele.checked;\n-            found = true;\n-        }\n-    }\n-    if (!found) {\n-        var obj = {};\n-        obj[\"id\"] = id;\n-        obj[\"key\"] = key;\n-        obj[\"Caption\"] = caption;\n-        obj[\"view\"] = ele.checked;\n-        CurrentPageSett.push(obj);\n-    }\n-    console.table(CurrentPageSett)\n-    settings[filename] = CurrentPageSett;\n-    storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify(settings)).then(function (data) {\n-    })\n-    hide();\n-}\n-\n-\n-\n-function noteError(error) {\n-    $(\"body\").append(error)\n-    console.log(error);\n-    $(\"#loader\").removeClass('has-loader');\n-}\n-var my_awesome_script = document.createElement('script');\n-my_awesome_script.setAttribute('src', 'js/localStorageGet.js');\n-document.head.appendChild(my_awesome_script);\n-\n-var my_awesome_script = document.createElement('script');\n-my_awesome_script.setAttribute('src', 'js/jsgetValueNotDefine.js');\n-document.head.appendChild(my_awesome_script);\n-var my_awesome_script = document.createElement('script');\n-my_awesome_script.setAttribute('src', 'js/jsStoreDatatoIndexeddb.js');\n-document.head.appendChild(my_awesome_script);\n-var CURRENT_YEAR = Currentyear;\n-Curentyearforlocalstorage = '2122'\n-\n-\n-\n-\n-console.log(SyncType)\n-console.log(\"--ONLINE--\" + navigator.onLine);\n-var Enavigator = navigator.onLine;\n-function jsGetObjectByKey(Db, key, OnGetId) {\n-\n-    return new Promise(function (resolve, reject) {\n-        var idb_request;\n-        var data;\n-        idb_request = window.indexedDB.open(Db, 1);\n-\n-        idb_request.addEventListener(\"error\", function (event) {\n-            alert(\"Could not open Indexed DB due to error: \" + this.errorCode);\n-            reject(\"Could not open Indexed DB due to error: \" + this.errorCode);\n-        });\n-        idb_request.addEventListener(\"success\", function (event) {\n-            var database = this.result;\n-            var storage = database\n-                .transaction(key, \"readwrite\")\n-                .objectStore(key);\n-            // console.log(database.objectStoreNames.contains(key));\n-            storage.get(key).addEventListener(\"success\", function (event) {\n-                var result = this.result;\n-                if (key == \"settOTG\") {\n-                    if (result.length == 0) {\n-                        result = {};\n-                        storedatatoIndexdb(DSN, key, JSON.stringify(result)).then(function (data) {\n-                        })\n-                    }\n-                }\n-                if (SyncType == \"LIVE\") {\n-                    // console.log(SyncType);\n-                    getliveData(key).then(function (liveData) {\n-                        if (liveData.length > 0) {\n-                            // console.log(SyncType, liveData)\n-                            resolve(liveData);\n-                            // storedatatoIndexdb(DSN, key, JSON.stringify(liveData)).then(function (data) {\n-                            // }, function (error) {\n-                            // });\n-                        }\n-                    }).catch(function (err) {\n-                        console.log(key, err);\n-                        resolve(result);\n-                    })\n-                } else {\n-                    resolve(result);\n-                }\n-            });\n-        });\n-    });\n-}\n-// getliveData()\n-firebaseDirpath = 'forUnique' + \"/\" + atob(ClDb) + \"/\" + ClDb + \"/\" + Currentyear + \"/\"\n-function getliveData(key, Data) {\n-    path = firebaseDirpath + key;\n-    return new Promise(function (resolve, reject) {\n-        firebase.database().ref(path).on('value', (snapshot) => {\n-            const data = snapshot.val();\n-            // console.log(data);\n-            resolve(data);\n-        }, function (error) {\n-            reject(\"Error: \" + error.code);\n-        });\n-    })\n-}\n-\n-\n-\n-var filename = url.substring(url.lastIndexOf('/') + 1);\n-toIndex = filename.indexOf(\".html\");\n-filename = filename.substring(0, toIndex);\n-var CurrentPageSett\n-var tempSettings = [{ \"view\": true, \"key\": \"TYPE\", \"id\": \"TYPE\", \"Caption\": \"TYPE\", \"cal\": \"\" },\n-{ \"view\": true, \"key\": \"FRM\", \"id\": \"FRM\", \"Caption\": \"FIRM\", \"cal\": \"\" },\n-{ \"view\": true, \"key\": \"GROUP\", \"id\": \"GROUP\", \"Caption\": \"GROUP\", \"cal\": \"\" }];\n-\n-function viewVal(key) {\n-    return CurrentPageSett.filter(function (d) {\n-        return d.key == key;\n-    })\n-}\n-\n-function openSettingForm(sett) {\n-    var modelDiv = `<div id=\"popUpModelSettings\" class=\"modal\">\n-                <div class=\"modal-content\">\n-                <div class=\"modal-header\">\n-                    <div style=\"display:flex;width:100%;\">\n-                        <div style=\"width:50%\">\n-                        <h2 id=\"mdlPartyName\" style=\"margin-top: 0;\">View Setting</h2>\n-                        </div>\n-                        <div style=\"width:50%\">\n-                        <span class=\"close\" onclick=\"document.getElementById('popUpModelSettings').style.display = 'none'\">&times;</span>\n-                        </div>\n-                    </div>\n-                    \n-                    \n-                </div>\n-                <div class=\"modal-body\" align=\"center\">\n-                <table style=\"padding:5px;\"align=\"center\">`;\n-\n-    if (sett.length > 0) {\n-        var sr = 0;\n-        modelDiv += `\n-        <tr>\n-        <th>SR</th>\n-        <th>FIELD</th>\n-        <th></th>\n-        </tr>`;\n-        for (var i = 0; i < sett.length; i++) {\n-            var check = '';\n-            var savedSetting = viewVal(sett[i].key);\n-            if (savedSetting.length > 0) {\n-                if (savedSetting[0].view) {\n-                    check = \"checked\";\n-                }\n-            } else {\n-                if (sett[i].view) {\n-                    check = \"checked\";\n-                }\n-            }\n-            sr = i + 1\n-            modelDiv += `\n-        <tr >\n-        <td>` + sr + `-</td>\n-        <td>` + sett[i].nodeName + `</td>\n-        <td><input type=\"checkbox\" \n-        onchange=\"settingSave('` + sett[i].id + `','` + sett[i].key + `','` + sett[i].Caption + `',this);\n-        \"key=\"` + sett[i].key + `\" Caption=\"` + sett[i].Caption + `\" \n-        id=\"` + sett[i].key + `\" ` + check + `/>&nbsp</td>\n-        </tr>  \n-         `;\n-        }\n-    }\n-    modelDiv += `\n-            </table>\n-            </div>\n-            <div class=\"modal-footer\" align=\"center\">\n-            </div>\n-            </div>\n-            </div>`;\n-\n-\n-    $('body').append(modelDiv);\n-    // showhideUnhide();\n-\n-}\n-function showhideUnhide() {\n-    try {\n-        var modal = document.getElementById(\"popUpModelSettings\");\n-        modal.style.display = \"block\";\n-    } catch (error) {\n-\n-    }\n-}\n-\n-function hide() {\n-    try {\n-\n-        if (CurrentPageSett.length > 0) {\n-            for (var j = 0; j < CurrentPageSett.length; j++) {\n-                if (CurrentPageSett[j].view) {\n-                    $(\".hide\" + CurrentPageSett[j].key).css(\"display\", \"\");\n-                } else {\n-                    $(\".hide\" + CurrentPageSett[j].key).css(\"display\", \"none\");\n-                }\n-            }\n-        }\n-    } catch (error) {\n-\n-    }\n-}\n-\n-var SettingByClass = []; var SettingByClassFlag = [];\n-function hideList() {\n-    jsGetObjectByKey(DSN, \"settOTG\", \"\").then(function (data) {\n-        settings = data\n-        CurrentPageSett = settings[filename];\n-        tempSettings = document.querySelectorAll('*[class]');\n-        console.log(tempSettings);\n-        for (var i = 0; i < tempSettings.length; i++) {\n-            if (tempSettings[i].className.indexOf('hide') > -1 && tempSettings[i].className.indexOf('hideAbleTr') < 0 && tempSettings[i].className.indexOf('unhideAbleTr') < 0) {\n-                // console.log(tempSettings[i].nodeName)\n-                var obj = {};\n-                var key = tempSettings[i].className.replace(\"hide\", \"\");\n-                if (key.indexOf(\" \") > -1) {\n-                    key = key.substring(0, key.indexOf(\" \"));\n-                }\n-                obj.key = key;\n-                obj.id = key;\n-                var className = tempSettings[i].className;\n-                if (className.indexOf(\" \") > -1) {\n-                    className = className.substring(0, className.indexOf(\" \"));\n-                }\n-                obj.class = className;\n-                obj.Caption = \"\";\n-                obj.nodeName = tempSettings[i].outerText;\n-                var display = tempSettings[i].style.display;\n-                if (display == \"none\") {\n-                    obj.view = false;\n-                } else {\n-                    obj.view = true;\n-                }\n-                if (!SettingByClassFlag[key]) {\n-                    SettingByClass.push(obj);\n-                    SettingByClassFlag[key] = true;\n-                }\n-            }\n-        }\n-        console.table(SettingByClass)\n-        if (settings[filename] == undefined || settings[filename] == null) {\n-            CurrentPageSett = SettingByClass;\n-            settings[filename] = CurrentPageSett;\n-            // console.log(settings[filename], settings);\n-            storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify(settings)).then(function (data) {\n-            })\n-        }\n-        // storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify([])).then(function (data) {\n-        // })\n-        openSettingForm(SettingByClass)\n-        hide();\n-    });\n-}\n-\n-function settingSave(id, key, caption, ele) {\n-    var found = false;\n-    for (var i = 0; i < CurrentPageSett.length; i++) {\n-        if (CurrentPageSett[i][\"id\"] == id) {\n-            CurrentPageSett[i][\"key\"] = key;\n-            CurrentPageSett[i][\"Caption\"] = caption;\n-            CurrentPageSett[i][\"view\"] = ele.checked;\n-            found = true;\n-        }\n-    }\n-    if (!found) {\n-        var obj = {};\n-        obj[\"id\"] = id;\n-        obj[\"key\"] = key;\n-        obj[\"Caption\"] = caption;\n-        obj[\"view\"] = ele.checked;\n-        CurrentPageSett.push(obj);\n-    }\n-    console.table(CurrentPageSett)\n-    settings[filename] = CurrentPageSett;\n-    storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify(settings)).then(function (data) {\n-    })\n-    hide();\n-}\n-\n-\n-\n-function noteError(error){\n-    $(\"body\").append(error)\n-    console.log(error);\n-    $(\"#loader\").removeClass('has-loader');\n-  }\n-var my_awesome_script = document.createElement('script');\n-my_awesome_script.setAttribute('src', 'js/jsgetValueNotDefine.js');\n-document.head.appendChild(my_awesome_script);\n-var my_awesome_script = document.createElement('script');\n-my_awesome_script.setAttribute('src', 'js/jsStoreDatatoIndexeddb.js');\n-document.head.appendChild(my_awesome_script);\n-var CURRENT_YEAR = Currentyear;\n-console.log(clnt);\n-Curentyearforlocalstorage = '2122'\n-\n-\n-\n-\n-console.log(SyncType)\n-console.log(\"--ONLINE--\" + navigator.onLine);\n-var Enavigator = navigator.onLine;\n-function jsGetObjectByKey(Db, key, OnGetId) {\n-\n-    return new Promise(function (resolve, reject) {\n-        var idb_request;\n-        var data;\n-        idb_request = window.indexedDB.open(Db, 1);\n-\n-        idb_request.addEventListener(\"error\", function (event) {\n-            alert(\"Could not open Indexed DB due to error: \" + this.errorCode);\n-            reject(\"Could not open Indexed DB due to error: \" + this.errorCode);\n-        });\n-        idb_request.addEventListener(\"success\", function (event) {\n-            var database = this.result;\n-            var storage = database\n-                .transaction(key, \"readwrite\")\n-                .objectStore(key);\n-            // console.log(database.objectStoreNames.contains(key));\n-            storage.get(key).addEventListener(\"success\", function (event) {\n-                var result = this.result;\n-                if (key == \"settOTG\") {\n-                    if (result.length == 0) {\n-                        result = {};\n-                        storedatatoIndexdb(DSN, key, JSON.stringify(result)).then(function (data) {\n-                        })\n-                    }\n-                }\n-                if (SyncType == \"LIVE\") {\n-                    // console.log(SyncType);\n-                    getliveData(key).then(function (liveData) {\n-                        if (liveData.length > 0) {\n-                            // console.log(SyncType, liveData)\n-                            resolve(liveData);\n-                            // storedatatoIndexdb(DSN, key, JSON.stringify(liveData)).then(function (data) {\n-                            // }, function (error) {\n-                            // });\n-                        }\n-                    }).catch(function (err) {\n-                        console.log(key, err);\n-                        resolve(result);\n-                    })\n-                } else {\n-                    resolve(result);\n-                }\n-            });\n-        });\n-    });\n-}\n-// getliveData()\n-firebaseDirpath = 'forUnique' + \"/\" + atob(ClDb) + \"/\" + ClDb + \"/\" + Currentyear + \"/\"\n-function getliveData(key, Data) {\n-    path = firebaseDirpath + key;\n-    return new Promise(function (resolve, reject) {\n-        firebase.database().ref(path).on('value', (snapshot) => {\n-            const data = snapshot.val();\n-            // console.log(data);\n-            resolve(data);\n-        }, function (error) {\n-            reject(\"Error: \" + error.code);\n-        });\n-    })\n-}\n-\n-\n-\n-var filename = url.substring(url.lastIndexOf('/') + 1);\n-toIndex = filename.indexOf(\".html\");\n-filename = filename.substring(0, toIndex);\n-var CurrentPageSett\n-var tempSettings = [{ \"view\": true, \"key\": \"TYPE\", \"id\": \"TYPE\", \"Caption\": \"TYPE\", \"cal\": \"\" },\n-{ \"view\": true, \"key\": \"FRM\", \"id\": \"FRM\", \"Caption\": \"FIRM\", \"cal\": \"\" },\n-{ \"view\": true, \"key\": \"GROUP\", \"id\": \"GROUP\", \"Caption\": \"GROUP\", \"cal\": \"\" }];\n-\n-function viewVal(key) {\n-    return CurrentPageSett.filter(function (d) {\n-        return d.key == key;\n-    })\n-}\n-\n-function openSettingForm(sett) {\n-    var modelDiv = `<div id=\"popUpModelSettings\" class=\"modal\">\n-                <div class=\"modal-content\">\n-                <div class=\"modal-header\">\n-                    <div style=\"display:flex;width:100%;\">\n-                        <div style=\"width:50%\">\n-                        <h2 id=\"mdlPartyName\" style=\"margin-top: 0;\">View Setting</h2>\n-                        </div>\n-                        <div style=\"width:50%\">\n-                        <span class=\"close\" onclick=\"document.getElementById('popUpModelSettings').style.display = 'none'\">&times;</span>\n-                        </div>\n-                    </div>\n-                    \n-                    \n-                </div>\n-                <div class=\"modal-body\" align=\"center\">\n-                <table style=\"padding:5px;\"align=\"center\">`;\n-\n-    if (sett.length > 0) {\n-        var sr = 0;\n-        modelDiv += `\n-        <tr>\n-        <th>SR</th>\n-        <th>FIELD</th>\n-        <th></th>\n-        </tr>`;\n-        for (var i = 0; i < sett.length; i++) {\n-            var check = '';\n-            var savedSetting = viewVal(sett[i].key);\n-            if (savedSetting.length > 0) {\n-                if (savedSetting[0].view) {\n-                    check = \"checked\";\n-                }\n-            } else {\n-                if (sett[i].view) {\n-                    check = \"checked\";\n-                }\n-            }\n-            sr = i + 1\n-            modelDiv += `\n-        <tr >\n-        <td>` + sr + `-</td>\n-        <td>` + sett[i].nodeName + `</td>\n-        <td><input type=\"checkbox\" \n-        onchange=\"settingSave('` + sett[i].id + `','` + sett[i].key + `','` + sett[i].Caption + `',this);\n-        \"key=\"` + sett[i].key + `\" Caption=\"` + sett[i].Caption + `\" \n-        id=\"` + sett[i].key + `\" ` + check + `/>&nbsp</td>\n-        </tr>  \n-         `;\n-        }\n-    }\n-    modelDiv += `\n-            </table>\n-            </div>\n-            <div class=\"modal-footer\" align=\"center\">\n-            </div>\n-            </div>\n-            </div>`;\n-\n-\n-    $('body').append(modelDiv);\n-    // showhideUnhide();\n-\n-}\n-function showhideUnhide() {\n-    try {\n-        var modal = document.getElementById(\"popUpModelSettings\");\n-        modal.style.display = \"block\";\n-    } catch (error) {\n-\n-    }\n-}\n-\n-function hide() {\n-    try {\n-\n-        if (CurrentPageSett.length > 0) {\n-            for (var j = 0; j < CurrentPageSett.length; j++) {\n-                if (CurrentPageSett[j].view) {\n-                    $(\".hide\" + CurrentPageSett[j].key).css(\"display\", \"\");\n-                } else {\n-                    $(\".hide\" + CurrentPageSett[j].key).css(\"display\", \"none\");\n-                }\n-            }\n-        }\n-    } catch (error) {\n-\n-    }\n-}\n-\n-var SettingByClass = []; var SettingByClassFlag = [];\n-function hideList() {\n-    jsGetObjectByKey(DSN, \"settOTG\", \"\").then(function (data) {\n-        settings = data\n-        CurrentPageSett = settings[filename];\n-        tempSettings = document.querySelectorAll('*[class]');\n-        console.log(tempSettings);\n-        for (var i = 0; i < tempSettings.length; i++) {\n-            if (tempSettings[i].className.indexOf('hide') > -1 && tempSettings[i].className.indexOf('hideAbleTr') < 0 && tempSettings[i].className.indexOf('unhideAbleTr') < 0) {\n-                // console.log(tempSettings[i].nodeName)\n-                var obj = {};\n-                var key = tempSettings[i].className.replace(\"hide\", \"\");\n-                if (key.indexOf(\" \") > -1) {\n-                    key = key.substring(0, key.indexOf(\" \"));\n-                }\n-                obj.key = key;\n-                obj.id = key;\n-                var className = tempSettings[i].className;\n-                if (className.indexOf(\" \") > -1) {\n-                    className = className.substring(0, className.indexOf(\" \"));\n-                }\n-                obj.class = className;\n-                obj.Caption = \"\";\n-                obj.nodeName = tempSettings[i].outerText;\n-                var display = tempSettings[i].style.display;\n-                if (display == \"none\") {\n-                    obj.view = false;\n-                } else {\n-                    obj.view = true;\n-                }\n-                if (!SettingByClassFlag[key]) {\n-                    SettingByClass.push(obj);\n-                    SettingByClassFlag[key] = true;\n-                }\n-            }\n-        }\n-        console.table(SettingByClass)\n-        if (settings[filename] == undefined || settings[filename] == null) {\n-            CurrentPageSett = SettingByClass;\n-            settings[filename] = CurrentPageSett;\n-            // console.log(settings[filename], settings);\n-            storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify(settings)).then(function (data) {\n-            })\n-        }\n-        // storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify([])).then(function (data) {\n-        // })\n-        openSettingForm(SettingByClass)\n-        hide();\n-    });\n-}\n-\n-function settingSave(id, key, caption, ele) {\n-    var found = false;\n-    for (var i = 0; i < CurrentPageSett.length; i++) {\n-        if (CurrentPageSett[i][\"id\"] == id) {\n-            CurrentPageSett[i][\"key\"] = key;\n-            CurrentPageSett[i][\"Caption\"] = caption;\n-            CurrentPageSett[i][\"view\"] = ele.checked;\n-            found = true;\n-        }\n-    }\n-    if (!found) {\n-        var obj = {};\n-        obj[\"id\"] = id;\n-        obj[\"key\"] = key;\n-        obj[\"Caption\"] = caption;\n-        obj[\"view\"] = ele.checked;\n-        CurrentPageSett.push(obj);\n-    }\n-    console.table(CurrentPageSett)\n-    settings[filename] = CurrentPageSett;\n-    storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify(settings)).then(function (data) {\n-    })\n-    hide();\n-}\n-\n-\n-\n"
                },
                {
                    "date": 1641617456268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -222,9 +222,9 @@\n                     SettingByClassFlag[key] = true;\n                 }\n             }\n         }\n-        console.table(SettingByClass)\n+        // console.table(SettingByClass)\n         if (settings[filename] == undefined || settings[filename] == null) {\n             CurrentPageSett = SettingByClass;\n             settings[filename] = CurrentPageSett;\n             // console.log(settings[filename], settings);\n"
                },
                {
                    "date": 1641617481796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -192,9 +192,9 @@\n     jsGetObjectByKey(DSN, \"settOTG\", \"\").then(function (data) {\n         settings = data\n         CurrentPageSett = settings[filename];\n         tempSettings = document.querySelectorAll('*[class]');\n-        console.log(tempSettings);\n+        // console.log(tempSettings);\n         for (var i = 0; i < tempSettings.length; i++) {\n             if (tempSettings[i].className.indexOf('hide') > -1 && tempSettings[i].className.indexOf('hideAbleTr') < 0 && tempSettings[i].className.indexOf('unhideAbleTr') < 0) {\n                 // console.log(tempSettings[i].nodeName)\n                 var obj = {};\n"
                },
                {
                    "date": 1642055532700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -264,4 +264,24 @@\n }\n \n \n \n+\n+\n+function getContactDetails(mobileNo) {\n+    try {\n+        var contactDetils = getPartyDetailsByMobileNo(mobileNo);\n+        if (contactDetils.length > 0) {\n+            var displayname = contactDetils[0].partyname;\n+            var email = contactDetils[0].EML;\n+            var mobileNo = contactDetils[0].MO;\n+            var ph1 = contactDetils[0].PH1;\n+            var company = contactDetils[0].partyname;\n+            var jobTitle = \"BUSINESS\";\n+            Android.SaveContact(displayname, mobileNo, ph1, email, company, jobTitle);\n+        } else {\n+            Android.SaveContact(\"\", mobileNo, \"\", \"\", \"\", \"\");\n+        }\n+    } catch (error) {\n+        \n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1642055590369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n-function noteError(e){\n+function noteError(e) {\n     $(\"body\").append(e.stack)\n     $(\"body\").append(e.onLine)\n     $(\"#loader\").removeClass('has-loader');\n-  }\n-  \n+}\n+\n var my_awesome_script = document.createElement('script');\n my_awesome_script.setAttribute('src', 'js/jsgetValueNotDefine.js');\n document.head.appendChild(my_awesome_script);\n var my_awesome_script = document.createElement('script');\n@@ -281,7 +281,12 @@\n         } else {\n             Android.SaveContact(\"\", mobileNo, \"\", \"\", \"\", \"\");\n         }\n     } catch (error) {\n-        \n+\n     }\n+}\n+function getPartyDetailsByMobileNo(mobileNoSearch) {\n+    return masterData.filter(function (data) {\n+        return data.MO == mobileNoSearch;\n+    })\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1642055614347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -264,10 +264,10 @@\n }\n \n \n \n+//---------------call save system\n \n-\n function getContactDetails(mobileNo) {\n     try {\n         var contactDetils = getPartyDetailsByMobileNo(mobileNo);\n         if (contactDetils.length > 0) {\n@@ -288,5 +288,7 @@\n function getPartyDetailsByMobileNo(mobileNoSearch) {\n     return masterData.filter(function (data) {\n         return data.MO == mobileNoSearch;\n     })\n-}\n\\ No newline at end of file\n+}\n+\n+//---------------call save system\n\\ No newline at end of file\n"
                },
                {
                    "date": 1642055783507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,11 +284,17 @@\n     } catch (error) {\n \n     }\n }\n+\n function getPartyDetailsByMobileNo(mobileNoSearch) {\n-    return masterData.filter(function (data) {\n-        return data.MO == mobileNoSearch;\n-    })\n+    try {\n+        var retVal = masterData.filter(function (data) {\n+            return data.MO == mobileNoSearch;\n+        })\n+    } catch (error) {\n+        retVal = [];\n+    }\n+    return retVal;\n }\n \n //---------------call save system\n\\ No newline at end of file\n"
                },
                {
                    "date": 1642056115219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -288,9 +288,9 @@\n \n function getPartyDetailsByMobileNo(mobileNoSearch) {\n     try {\n         var retVal = masterData.filter(function (data) {\n-            return data.MO == mobileNoSearch;\n+            return data.MO == mobileNoSearch || data.PH1 == mobileNoSearch;\n         })\n     } catch (error) {\n         retVal = [];\n     }\n"
                },
                {
                    "date": 1642056178574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -267,8 +267,9 @@\n \n //---------------call save system\n \n function getContactDetails(mobileNo) {\n+    mobileNo=mobileNo.toString();\n     try {\n         var contactDetils = getPartyDetailsByMobileNo(mobileNo);\n         if (contactDetils.length > 0) {\n             var displayname = contactDetils[0].partyname;\n"
                },
                {
                    "date": 1642056465128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -267,21 +267,21 @@\n \n //---------------call save system\n \n function getContactDetails(mobileNo) {\n-    mobileNo=mobileNo.toString();\n     try {\n         var contactDetils = getPartyDetailsByMobileNo(mobileNo);\n         if (contactDetils.length > 0) {\n             var displayname = contactDetils[0].partyname;\n             var email = contactDetils[0].EML;\n             var mobileNo = contactDetils[0].MO;\n             var ph1 = contactDetils[0].PH1;\n+            var ph2 = contactDetils[0].PH2;\n             var company = contactDetils[0].partyname;\n             var jobTitle = \"BUSINESS\";\n-            Android.SaveContact(displayname, mobileNo, ph1, email, company, jobTitle);\n+            Android.SaveContact(displayname, mobileNo, ph1,ph2, email, company, jobTitle);\n         } else {\n-            Android.SaveContact(\"\", mobileNo, \"\", \"\", \"\", \"\");\n+            Android.SaveContact(\"\", mobileNo, \"\",\"\", \"\", \"\", \"\");\n         }\n     } catch (error) {\n \n     }\n@@ -289,9 +289,9 @@\n \n function getPartyDetailsByMobileNo(mobileNoSearch) {\n     try {\n         var retVal = masterData.filter(function (data) {\n-            return data.MO == mobileNoSearch || data.PH1 == mobileNoSearch;\n+            return data.MO == mobileNoSearch || data.PH1 == mobileNoSearch|| data.PH2 == mobileNoSearch;\n         })\n     } catch (error) {\n         retVal = [];\n     }\n"
                },
                {
                    "date": 1645505843460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,12 +11,8 @@\n my_awesome_script.setAttribute('src', 'js/jsStoreDatatoIndexeddb.js');\n document.head.appendChild(my_awesome_script);\n var CURRENT_YEAR = Currentyear;\n Curentyearforlocalstorage = '2122'\n-\n-\n-\n-\n console.log(SyncType)\n console.log(\"--ONLINE--\" + navigator.onLine);\n var Enavigator = navigator.onLine;\n function jsGetObjectByKey(Db, key, OnGetId) {\n@@ -270,14 +266,14 @@\n function getContactDetails(mobileNo) {\n     try {\n         var contactDetils = getPartyDetailsByMobileNo(mobileNo);\n         if (contactDetils.length > 0) {\n-            var displayname = contactDetils[0].partyname;\n-            var email = contactDetils[0].EML;\n-            var mobileNo = contactDetils[0].MO;\n-            var ph1 = contactDetils[0].PH1;\n-            var ph2 = contactDetils[0].PH2;\n-            var company = contactDetils[0].partyname;\n+            var displayname = getValueNotDefine(contactDetils[0].partyname);\n+            var email = getValueNotDefine(contactDetils[0].EML);\n+            var mobileNo = getValueNotDefine(contactDetils[0].MO);\n+            var ph1 = getValueNotDefine(contactDetils[0].PH1);\n+            var ph2 = getValueNotDefine(contactDetils[0].PH2);\n+            var company = getValueNotDefine(contactDetils[0].partyname);\n             var jobTitle = \"BUSINESS\";\n             Android.SaveContact(displayname, mobileNo, ph1,ph2, email, company, jobTitle);\n         } else {\n             Android.SaveContact(\"\", mobileNo, \"\",\"\", \"\", \"\", \"\");\n@@ -297,5 +293,16 @@\n     }\n     return retVal;\n }\n \n-//---------------call save system\n\\ No newline at end of file\n+//---------------call save system\n+\n+\n+function getValueNotDefine(value) {\n+    var Rvalue;\n+    if (value == 'undefined' || value == null) {\n+        Rvalue = '';\n+    } else {\n+        Rvalue = value\n+    }\n+    return Rvalue;\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1645506125819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,48 +17,51 @@\n var Enavigator = navigator.onLine;\n function jsGetObjectByKey(Db, key, OnGetId) {\n \n     return new Promise(function (resolve, reject) {\n-        var idb_request;\n-        var data;\n-        idb_request = window.indexedDB.open(Db, 1);\n+        createDatabase(Db, keyArrayInDatabase).then(function (d) {\n \n-        idb_request.addEventListener(\"error\", function (event) {\n-            alert(\"Could not open Indexed DB due to error: \" + this.errorCode);\n-            reject(\"Could not open Indexed DB due to error: \" + this.errorCode);\n-        });\n-        idb_request.addEventListener(\"success\", function (event) {\n-            var database = this.result;\n-            var storage = database\n-                .transaction(key, \"readwrite\")\n-                .objectStore(key);\n-            // console.log(database.objectStoreNames.contains(key));\n-            storage.get(key).addEventListener(\"success\", function (event) {\n-                var result = this.result;\n-                if (key == \"settOTG\") {\n-                    if (result.length == 0) {\n-                        result = {};\n-                        storedatatoIndexdb(DSN, key, JSON.stringify(result)).then(function (data) {\n+            var idb_request;\n+            var data;\n+            idb_request = window.indexedDB.open(Db, 1);\n+\n+            idb_request.addEventListener(\"error\", function (event) {\n+                alert(\"Could not open Indexed DB due to error: \" + this.errorCode);\n+                reject(\"Could not open Indexed DB due to error: \" + this.errorCode);\n+            });\n+            idb_request.addEventListener(\"success\", function (event) {\n+                var database = this.result;\n+                var storage = database\n+                    .transaction(key, \"readwrite\")\n+                    .objectStore(key);\n+                // console.log(database.objectStoreNames.contains(key));\n+                storage.get(key).addEventListener(\"success\", function (event) {\n+                    var result = this.result;\n+                    if (key == \"settOTG\") {\n+                        if (result.length == 0) {\n+                            result = {};\n+                            storedatatoIndexdb(DSN, key, JSON.stringify(result)).then(function (data) {\n+                            })\n+                        }\n+                    }\n+                    if (SyncType == \"LIVE\") {\n+                        // console.log(SyncType);\n+                        getliveData(key).then(function (liveData) {\n+                            if (liveData.length > 0) {\n+                                // console.log(SyncType, liveData)\n+                                resolve(liveData);\n+                                // storedatatoIndexdb(DSN, key, JSON.stringify(liveData)).then(function (data) {\n+                                // }, function (error) {\n+                                // });\n+                            }\n+                        }).catch(function (err) {\n+                            console.log(key, err);\n+                            resolve(result);\n                         })\n+                    } else {\n+                        resolve(result);\n                     }\n-                }\n-                if (SyncType == \"LIVE\") {\n-                    // console.log(SyncType);\n-                    getliveData(key).then(function (liveData) {\n-                        if (liveData.length > 0) {\n-                            // console.log(SyncType, liveData)\n-                            resolve(liveData);\n-                            // storedatatoIndexdb(DSN, key, JSON.stringify(liveData)).then(function (data) {\n-                            // }, function (error) {\n-                            // });\n-                        }\n-                    }).catch(function (err) {\n-                        console.log(key, err);\n-                        resolve(result);\n-                    })\n-                } else {\n-                    resolve(result);\n-                }\n+                });\n             });\n         });\n     });\n }\n@@ -273,11 +276,11 @@\n             var ph1 = getValueNotDefine(contactDetils[0].PH1);\n             var ph2 = getValueNotDefine(contactDetils[0].PH2);\n             var company = getValueNotDefine(contactDetils[0].partyname);\n             var jobTitle = \"BUSINESS\";\n-            Android.SaveContact(displayname, mobileNo, ph1,ph2, email, company, jobTitle);\n+            Android.SaveContact(displayname, mobileNo, ph1, ph2, email, company, jobTitle);\n         } else {\n-            Android.SaveContact(\"\", mobileNo, \"\",\"\", \"\", \"\", \"\");\n+            Android.SaveContact(\"\", mobileNo, \"\", \"\", \"\", \"\", \"\");\n         }\n     } catch (error) {\n \n     }\n@@ -285,9 +288,9 @@\n \n function getPartyDetailsByMobileNo(mobileNoSearch) {\n     try {\n         var retVal = masterData.filter(function (data) {\n-            return data.MO == mobileNoSearch || data.PH1 == mobileNoSearch|| data.PH2 == mobileNoSearch;\n+            return data.MO == mobileNoSearch || data.PH1 == mobileNoSearch || data.PH2 == mobileNoSearch;\n         })\n     } catch (error) {\n         retVal = [];\n     }\n"
                },
                {
                    "date": 1645506200877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,8 @@\n+\n+key = [\"PBLS\",\"BILLREC\",\"ACGROUP\",\"BLS\", \"COMM\", \"CITY\", \"OUTSTANDING\", \"LEDGER\", \"SERIES\", \"COMPMST\", \"QUL\", \"MST\", \"DET\", \"TIME\"];\n+keyArrayInDatabase = [\"ACGROUP\",\"BILLREC\",\"PBLS\",\"COMM\",\"ORDER\",\"CHALTRN\",\"FINISHSTOCK\",\"TIME\",\"HASTE\",\"CITY\",\"ITEMWISESALE\",\"MILL\",\"OUTSTANDING\",\"PURCHASE\",\"LEDGER\",\"EMP\",\"FAS\",\"BLS\", \"SERIES\", \"COMPMST\", \"QUL\", \"PACKINGSTYLE\", \"MST\", \"DET\",\"settMill\",\"settOTG\"];\n+\n function noteError(e) {\n     $(\"body\").append(e.stack)\n     $(\"body\").append(e.onLine)\n     $(\"#loader\").removeClass('has-loader');\n"
                },
                {
                    "date": 1645506281866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,5 +311,58 @@\n     } else {\n         Rvalue = value\n     }\n     return Rvalue;\n-}\n\\ No newline at end of file\n+}\n+\n+\n+function createDatabase(Db, key) {\n+    return new Promise(function (resolve, reject) {\n+\n+        var database, idb_request;\n+        if (!('indexedDB' in window)) {\n+            alert('Error This browser doesn\\'t support IndexedDB');\n+            return;\n+        }\n+        var initializeMaster = {\n+            value: \"\",\n+            label: \"\",\n+            partyname: \"\",\n+            city: \"\",\n+            broker: \"\",\n+            ATYPE: \"\",\n+        };\n+        idb_request = window.indexedDB.open(Db, 1);\n+\n+        idb_request.addEventListener(\"error\", function (event) {\n+            alert(\n+                \"Error Could not open \" +\n+                Db +\n+                \" databases due to error: \" +\n+                this.errorCode\n+            );\n+            reject(false);\n+        });\n+\n+        idb_request.addEventListener(\"upgradeneeded\", function (event) {\n+            for (var i = 0; i < key.length; i++) {\n+                var storage = this.result.createObjectStore(key[i], {\n+                    autoIncrement: true,\n+                });\n+                if (key[i] == \"ORDER\") {\n+                    initializeMaster = [];\n+                }\n+                storage.add(initializeMaster, key[i]);\n+                console.log(initializeMaster);\n+                document.cookie =\n+                    key[i] +\n+                    \"_CREATETIME=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n+            }\n+            resolve(true);\n+            alert(\"Creating a new database!\");\n+            // document.location.href = \"./SYNCFIRM.php\";\n+        });\n+        idb_request.addEventListener(\"success\", function (event) {\n+            resolve(true);\n+        });\n+    });\n+}\n"
                },
                {
                    "date": 1645506329389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,10 +22,9 @@\n function jsGetObjectByKey(Db, key, OnGetId) {\n \n     return new Promise(function (resolve, reject) {\n         createDatabase(Db, keyArrayInDatabase).then(function (d) {\n-\n-            var idb_request;\n+             var idb_request;\n             var data;\n             idb_request = window.indexedDB.open(Db, 1);\n \n             idb_request.addEventListener(\"error\", function (event) {\n"
                },
                {
                    "date": 1645506336737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n \n-key = [\"PBLS\",\"BILLREC\",\"ACGROUP\",\"BLS\", \"COMM\", \"CITY\", \"OUTSTANDING\", \"LEDGER\", \"SERIES\", \"COMPMST\", \"QUL\", \"MST\", \"DET\", \"TIME\"];\n-keyArrayInDatabase = [\"ACGROUP\",\"BILLREC\",\"PBLS\",\"COMM\",\"ORDER\",\"CHALTRN\",\"FINISHSTOCK\",\"TIME\",\"HASTE\",\"CITY\",\"ITEMWISESALE\",\"MILL\",\"OUTSTANDING\",\"PURCHASE\",\"LEDGER\",\"EMP\",\"FAS\",\"BLS\", \"SERIES\", \"COMPMST\", \"QUL\", \"PACKINGSTYLE\", \"MST\", \"DET\",\"settMill\",\"settOTG\"];\n+key = [\"PBLS\", \"BILLREC\", \"ACGROUP\", \"BLS\", \"COMM\", \"CITY\", \"OUTSTANDING\", \"LEDGER\", \"SERIES\", \"COMPMST\", \"QUL\", \"MST\", \"DET\", \"TIME\"];\n+keyArrayInDatabase = [\"ACGROUP\", \"BILLREC\", \"PBLS\", \"COMM\", \"ORDER\", \"CHALTRN\", \"FINISHSTOCK\", \"TIME\", \"HASTE\", \"CITY\", \"ITEMWISESALE\", \"MILL\", \"OUTSTANDING\", \"PURCHASE\", \"LEDGER\", \"EMP\", \"FAS\", \"BLS\", \"SERIES\", \"COMPMST\", \"QUL\", \"PACKINGSTYLE\", \"MST\", \"DET\", \"settMill\", \"settOTG\"];\n \n function noteError(e) {\n     $(\"body\").append(e.stack)\n     $(\"body\").append(e.onLine)\n@@ -22,9 +22,9 @@\n function jsGetObjectByKey(Db, key, OnGetId) {\n \n     return new Promise(function (resolve, reject) {\n         createDatabase(Db, keyArrayInDatabase).then(function (d) {\n-             var idb_request;\n+            var idb_request;\n             var data;\n             idb_request = window.indexedDB.open(Db, 1);\n \n             idb_request.addEventListener(\"error\", function (event) {\n"
                },
                {
                    "date": 1646283826392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,8 @@\n console.log(SyncType)\n console.log(\"--ONLINE--\" + navigator.onLine);\n var Enavigator = navigator.onLine;\n function jsGetObjectByKey(Db, key, OnGetId) {\n-\n     return new Promise(function (resolve, reject) {\n         createDatabase(Db, keyArrayInDatabase).then(function (d) {\n             var idb_request;\n             var data;\n"
                },
                {
                    "date": 1647857837582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n var my_awesome_script = document.createElement('script');\n my_awesome_script.setAttribute('src', 'js/jsStoreDatatoIndexeddb.js');\n document.head.appendChild(my_awesome_script);\n var CURRENT_YEAR = Currentyear;\n-Curentyearforlocalstorage = '2122'\n+Curentyearforlocalstorage = getUrlParams(url, \"Curentyearforlocalstorage\");\n console.log(SyncType)\n console.log(\"--ONLINE--\" + navigator.onLine);\n var Enavigator = navigator.onLine;\n function jsGetObjectByKey(Db, key, OnGetId) {\n"
                },
                {
                    "date": 1660546177900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,11 @@\n console.log(SyncType)\n console.log(\"--ONLINE--\" + navigator.onLine);\n var Enavigator = navigator.onLine;\n function jsGetObjectByKey(Db, key, OnGetId) {\n+    Db = Db + extraPath;\n+\n+    \n     return new Promise(function (resolve, reject) {\n         createDatabase(Db, keyArrayInDatabase).then(function (d) {\n             var idb_request;\n             var data;\n"
                },
                {
                    "date": 1660546353149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,20 +10,78 @@\n \n var my_awesome_script = document.createElement('script');\n my_awesome_script.setAttribute('src', 'js/jsgetValueNotDefine.js');\n document.head.appendChild(my_awesome_script);\n-var my_awesome_script = document.createElement('script');\n-my_awesome_script.setAttribute('src', 'js/jsStoreDatatoIndexeddb.js');\n-document.head.appendChild(my_awesome_script);\n+\n var CURRENT_YEAR = Currentyear;\n Curentyearforlocalstorage = getUrlParams(url, \"Curentyearforlocalstorage\");\n console.log(SyncType)\n console.log(\"--ONLINE--\" + navigator.onLine);\n var Enavigator = navigator.onLine;\n+\n+\n+var Curentyearforlocalstorage;\n+function storedatatoIndexdb(Db, key, value) {\n+    Db = Db + extraPath;\n+    var promise = new Promise(function (resolve, reject) {\n+        var d = new Date();\n+        d.setTime(d.getTime() + (360 * 24 * 60 * 60 * 1000));\n+        var expires = \"expires=\" + d.toUTCString();\n+\n+        if (Db.indexOf(Curentyearforlocalstorage) > -1) {\n+            if (key == 'SERIES') {\n+                localStorage.setItem(key, (value));\n+            }\n+            if (key == 'COMPMST') {\n+                localStorage.setItem(key, (value));\n+            }\n+            if (key == 'TIME') {\n+                localStorage.setItem(key, (value));\n+                var TIMEarray = JSON.parse(value);\n+                var TIME = TIMEarray[0].TIME;\n+                try {\n+                    Android.SaveToAndroidTxt(DSN + key, JSON.stringify(value));\n+                } catch (error) {\n+\n+                }\n+            }\n+        }\n+        var database, idb_request;\n+\n+        idb_request = window.indexedDB.open(Db, 1);\n+\n+        idb_request.addEventListener(\"error\", function (event) {\n+            alert(\"Could not open Indexed DB due to error: \" + this.errorCode + \" in \" + key);\n+            reject(\"reject\" + key);\n+        });\n+\n+        idb_request.addEventListener(\"success\", function (event) {\n+            database = this.result;\n+            // console.log(key);\n+            var storage = database.transaction(key, \"readwrite\").objectStore(key);\n+            // console.log(database.objectStoreNames.contains(key));\n+            storage.get(key).addEventListener(\"success\", function (event) {\n+                // var result = this.result;\n+                storage.put(JSON.parse(value), key);\n+                // console.log(key, JSON.parse(value));\n+                // alert(JSON.stringify(value));\n+                resolve(key);\n+            });\n+\n+            // alert(\"Successfully opened database!\");\n+        });\n+\n+    });\n+\n+    return promise.then(function (result) {\n+        return result\n+    })\n+}\n+\n function jsGetObjectByKey(Db, key, OnGetId) {\n     Db = Db + extraPath;\n \n-    \n+\n     return new Promise(function (resolve, reject) {\n         createDatabase(Db, keyArrayInDatabase).then(function (d) {\n             var idb_request;\n             var data;\n"
                },
                {
                    "date": 1660576453299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,53 +22,56 @@\n var Curentyearforlocalstorage;\n function storedatatoIndexdb(Db, key, value) {\n     Db = Db + extraPath;\n     var promise = new Promise(function (resolve, reject) {\n-        var d = new Date();\n-        d.setTime(d.getTime() + (360 * 24 * 60 * 60 * 1000));\n-        var expires = \"expires=\" + d.toUTCString();\n+        createDatabase(Db, keyArrayInDatabase).then(function (d) {\n \n-        if (Db.indexOf(Curentyearforlocalstorage) > -1) {\n-            if (key == 'SERIES') {\n-                localStorage.setItem(key, (value));\n-            }\n-            if (key == 'COMPMST') {\n-                localStorage.setItem(key, (value));\n-            }\n-            if (key == 'TIME') {\n-                localStorage.setItem(key, (value));\n-                var TIMEarray = JSON.parse(value);\n-                var TIME = TIMEarray[0].TIME;\n-                try {\n-                    Android.SaveToAndroidTxt(DSN + key, JSON.stringify(value));\n-                } catch (error) {\n+            var d = new Date();\n+            d.setTime(d.getTime() + (360 * 24 * 60 * 60 * 1000));\n+            var expires = \"expires=\" + d.toUTCString();\n \n+            if (Db.indexOf(Curentyearforlocalstorage) > -1) {\n+                if (key == 'SERIES') {\n+                    localStorage.setItem(key, (value));\n                 }\n+                if (key == 'COMPMST') {\n+                    localStorage.setItem(key, (value));\n+                }\n+                if (key == 'TIME') {\n+                    localStorage.setItem(key, (value));\n+                    var TIMEarray = JSON.parse(value);\n+                    var TIME = TIMEarray[0].TIME;\n+                    try {\n+                        Android.SaveToAndroidTxt(DSN + key, JSON.stringify(value));\n+                    } catch (error) {\n+\n+                    }\n+                }\n             }\n-        }\n-        var database, idb_request;\n+            var database, idb_request;\n \n-        idb_request = window.indexedDB.open(Db, 1);\n+            idb_request = window.indexedDB.open(Db, 1);\n \n-        idb_request.addEventListener(\"error\", function (event) {\n-            alert(\"Could not open Indexed DB due to error: \" + this.errorCode + \" in \" + key);\n-            reject(\"reject\" + key);\n-        });\n+            idb_request.addEventListener(\"error\", function (event) {\n+                alert(\"Could not open Indexed DB due to error: \" + this.errorCode + \" in \" + key);\n+                reject(\"reject\" + key);\n+            });\n \n-        idb_request.addEventListener(\"success\", function (event) {\n-            database = this.result;\n-            // console.log(key);\n-            var storage = database.transaction(key, \"readwrite\").objectStore(key);\n-            // console.log(database.objectStoreNames.contains(key));\n-            storage.get(key).addEventListener(\"success\", function (event) {\n-                // var result = this.result;\n-                storage.put(JSON.parse(value), key);\n-                // console.log(key, JSON.parse(value));\n-                // alert(JSON.stringify(value));\n-                resolve(key);\n+            idb_request.addEventListener(\"success\", function (event) {\n+                database = this.result;\n+                // console.log(key);\n+                var storage = database.transaction(key, \"readwrite\").objectStore(key);\n+                // console.log(database.objectStoreNames.contains(key));\n+                storage.get(key).addEventListener(\"success\", function (event) {\n+                    // var result = this.result;\n+                    storage.put(JSON.parse(value), key);\n+                    // console.log(key, JSON.parse(value));\n+                    // alert(JSON.stringify(value));\n+                    resolve(key);\n+                });\n+\n+                // alert(\"Successfully opened database!\");\n             });\n-\n-            // alert(\"Successfully opened database!\");\n         });\n \n     });\n \n"
                }
            ],
            "date": 1638343024263,
            "name": "Commit-0",
            "content": "function noteError(error){\n    $(\"body\").append(error)\n    console.log(error);\n    $(\"#loader\").removeClass('has-loader');\n  }\nvar my_awesome_script = document.createElement('script');\nmy_awesome_script.setAttribute('src', 'js/jsgetValueNotDefine.js');\ndocument.head.appendChild(my_awesome_script);\nvar my_awesome_script = document.createElement('script');\nmy_awesome_script.setAttribute('src', 'js/jsStoreDatatoIndexeddb.js');\ndocument.head.appendChild(my_awesome_script);\nvar CURRENT_YEAR = Currentyear;\nvar ClDb = DSN.replace(Currentyear, \"\");\nvar clnt = atob(ClDb);\nconsole.log(clnt);\nCurentyearforlocalstorage = '2122'\n\n\n\n\nconsole.log(SyncType)\nconsole.log(\"--ONLINE--\" + navigator.onLine);\nvar Enavigator = navigator.onLine;\nfunction jsGetObjectByKey(Db, key, OnGetId) {\n\n    return new Promise(function (resolve, reject) {\n        var idb_request;\n        var data;\n        idb_request = window.indexedDB.open(Db, 1);\n\n        idb_request.addEventListener(\"error\", function (event) {\n            alert(\"Could not open Indexed DB due to error: \" + this.errorCode);\n            reject(\"Could not open Indexed DB due to error: \" + this.errorCode);\n        });\n        idb_request.addEventListener(\"success\", function (event) {\n            var database = this.result;\n            var storage = database\n                .transaction(key, \"readwrite\")\n                .objectStore(key);\n            // console.log(database.objectStoreNames.contains(key));\n            storage.get(key).addEventListener(\"success\", function (event) {\n                var result = this.result;\n                if (key == \"settOTG\") {\n                    if (result.length == 0) {\n                        result = {};\n                        storedatatoIndexdb(DSN, key, JSON.stringify(result)).then(function (data) {\n                        })\n                    }\n                }\n                if (SyncType == \"LIVE\") {\n                    // console.log(SyncType);\n                    getliveData(key).then(function (liveData) {\n                        if (liveData.length > 0) {\n                            // console.log(SyncType, liveData)\n                            resolve(liveData);\n                            // storedatatoIndexdb(DSN, key, JSON.stringify(liveData)).then(function (data) {\n                            // }, function (error) {\n                            // });\n                        }\n                    }).catch(function (err) {\n                        console.log(key, err);\n                        resolve(result);\n                    })\n                } else {\n                    resolve(result);\n                }\n            });\n        });\n    });\n}\n// getliveData()\nfirebaseDirpath = 'forUnique' + \"/\" + atob(ClDb) + \"/\" + ClDb + \"/\" + Currentyear + \"/\"\nfunction getliveData(key, Data) {\n    path = firebaseDirpath + key;\n    return new Promise(function (resolve, reject) {\n        firebase.database().ref(path).on('value', (snapshot) => {\n            const data = snapshot.val();\n            // console.log(data);\n            resolve(data);\n        }, function (error) {\n            reject(\"Error: \" + error.code);\n        });\n    })\n}\n\n\n\nvar filename = url.substring(url.lastIndexOf('/') + 1);\ntoIndex = filename.indexOf(\".html\");\nfilename = filename.substring(0, toIndex);\nvar CurrentPageSett\nvar tempSettings = [{ \"view\": true, \"key\": \"TYPE\", \"id\": \"TYPE\", \"Caption\": \"TYPE\", \"cal\": \"\" },\n{ \"view\": true, \"key\": \"FRM\", \"id\": \"FRM\", \"Caption\": \"FIRM\", \"cal\": \"\" },\n{ \"view\": true, \"key\": \"GROUP\", \"id\": \"GROUP\", \"Caption\": \"GROUP\", \"cal\": \"\" }];\n\nfunction viewVal(key) {\n    return CurrentPageSett.filter(function (d) {\n        return d.key == key;\n    })\n}\n\nfunction openSettingForm(sett) {\n    var modelDiv = `<div id=\"popUpModelSettings\" class=\"modal\">\n                <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <div style=\"display:flex;width:100%;\">\n                        <div style=\"width:50%\">\n                        <h2 id=\"mdlPartyName\" style=\"margin-top: 0;\">View Setting</h2>\n                        </div>\n                        <div style=\"width:50%\">\n                        <span class=\"close\" onclick=\"document.getElementById('popUpModelSettings').style.display = 'none'\">&times;</span>\n                        </div>\n                    </div>\n                    \n                    \n                </div>\n                <div class=\"modal-body\" align=\"center\">\n                <table style=\"padding:5px;\"align=\"center\">`;\n\n    if (sett.length > 0) {\n        var sr = 0;\n        modelDiv += `\n        <tr>\n        <th>SR</th>\n        <th>FIELD</th>\n        <th></th>\n        </tr>`;\n        for (var i = 0; i < sett.length; i++) {\n            var check = '';\n            var savedSetting = viewVal(sett[i].key);\n            if (savedSetting.length > 0) {\n                if (savedSetting[0].view) {\n                    check = \"checked\";\n                }\n            } else {\n                if (sett[i].view) {\n                    check = \"checked\";\n                }\n            }\n            sr = i + 1\n            modelDiv += `\n        <tr >\n        <td>` + sr + `-</td>\n        <td>` + sett[i].nodeName + `</td>\n        <td><input type=\"checkbox\" \n        onchange=\"settingSave('` + sett[i].id + `','` + sett[i].key + `','` + sett[i].Caption + `',this);\n        \"key=\"` + sett[i].key + `\" Caption=\"` + sett[i].Caption + `\" \n        id=\"` + sett[i].key + `\" ` + check + `/>&nbsp</td>\n        </tr>  \n         `;\n        }\n    }\n    modelDiv += `\n            </table>\n            </div>\n            <div class=\"modal-footer\" align=\"center\">\n            </div>\n            </div>\n            </div>`;\n\n\n    $('body').append(modelDiv);\n    // showhideUnhide();\n\n}\nfunction showhideUnhide() {\n    try {\n        var modal = document.getElementById(\"popUpModelSettings\");\n        modal.style.display = \"block\";\n    } catch (error) {\n\n    }\n}\n\nfunction hide() {\n    try {\n\n        if (CurrentPageSett.length > 0) {\n            for (var j = 0; j < CurrentPageSett.length; j++) {\n                if (CurrentPageSett[j].view) {\n                    $(\".hide\" + CurrentPageSett[j].key).css(\"display\", \"\");\n                } else {\n                    $(\".hide\" + CurrentPageSett[j].key).css(\"display\", \"none\");\n                }\n            }\n        }\n    } catch (error) {\n\n    }\n}\n\nvar SettingByClass = []; var SettingByClassFlag = [];\nfunction hideList() {\n    jsGetObjectByKey(DSN, \"settOTG\", \"\").then(function (data) {\n        settings = data\n        CurrentPageSett = settings[filename];\n        tempSettings = document.querySelectorAll('*[class]');\n        console.log(tempSettings);\n        for (var i = 0; i < tempSettings.length; i++) {\n            if (tempSettings[i].className.indexOf('hide') > -1 && tempSettings[i].className.indexOf('hideAbleTr') < 0 && tempSettings[i].className.indexOf('unhideAbleTr') < 0) {\n                // console.log(tempSettings[i].nodeName)\n                var obj = {};\n                var key = tempSettings[i].className.replace(\"hide\", \"\");\n                if (key.indexOf(\" \") > -1) {\n                    key = key.substring(0, key.indexOf(\" \"));\n                }\n                obj.key = key;\n                obj.id = key;\n                var className = tempSettings[i].className;\n                if (className.indexOf(\" \") > -1) {\n                    className = className.substring(0, className.indexOf(\" \"));\n                }\n                obj.class = className;\n                obj.Caption = \"\";\n                obj.nodeName = tempSettings[i].outerText;\n                var display = tempSettings[i].style.display;\n                if (display == \"none\") {\n                    obj.view = false;\n                } else {\n                    obj.view = true;\n                }\n                if (!SettingByClassFlag[key]) {\n                    SettingByClass.push(obj);\n                    SettingByClassFlag[key] = true;\n                }\n            }\n        }\n        console.table(SettingByClass)\n        if (settings[filename] == undefined || settings[filename] == null) {\n            CurrentPageSett = SettingByClass;\n            settings[filename] = CurrentPageSett;\n            // console.log(settings[filename], settings);\n            storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify(settings)).then(function (data) {\n            })\n        }\n        // storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify([])).then(function (data) {\n        // })\n        openSettingForm(SettingByClass)\n        hide();\n    });\n}\n\nfunction settingSave(id, key, caption, ele) {\n    var found = false;\n    for (var i = 0; i < CurrentPageSett.length; i++) {\n        if (CurrentPageSett[i][\"id\"] == id) {\n            CurrentPageSett[i][\"key\"] = key;\n            CurrentPageSett[i][\"Caption\"] = caption;\n            CurrentPageSett[i][\"view\"] = ele.checked;\n            found = true;\n        }\n    }\n    if (!found) {\n        var obj = {};\n        obj[\"id\"] = id;\n        obj[\"key\"] = key;\n        obj[\"Caption\"] = caption;\n        obj[\"view\"] = ele.checked;\n        CurrentPageSett.push(obj);\n    }\n    console.table(CurrentPageSett)\n    settings[filename] = CurrentPageSett;\n    storedatatoIndexdb(DSN, \"settOTG\", JSON.stringify(settings)).then(function (data) {\n    })\n    hide();\n}\n\n\n\n"
        }
    ]
}