{
    "sourceFile": "js/jsStoreDatatoIndexeddb.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1638001461655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1660546326871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,56 +0,0 @@\n-var Curentyearforlocalstorage;\n-function storedatatoIndexdb(Db, key, value) {\n-    var promise = new Promise(function (resolve, reject) {\n-        var d = new Date();\n-        d.setTime(d.getTime() + (360 * 24 * 60 * 60 * 1000));\n-        var expires = \"expires=\" + d.toUTCString();\n-\n-        if (Db.indexOf(Curentyearforlocalstorage) > -1) {\n-            if (key == 'SERIES') {\n-                localStorage.setItem(key, (value));\n-            }\n-            if (key == 'COMPMST') {\n-                localStorage.setItem(key, (value));\n-            }\n-            if (key == 'TIME') {\n-                localStorage.setItem(key, (value));\n-                var TIMEarray = JSON.parse(value);\n-                var TIME = TIMEarray[0].TIME;\n-                try {\n-                    Android.SaveToAndroidTxt(DSN + key, JSON.stringify(value));\n-                } catch (error) {\n-\n-                }\n-            }\n-        }\n-        var database, idb_request;\n-\n-        idb_request = window.indexedDB.open(Db, 1);\n-\n-        idb_request.addEventListener(\"error\", function (event) {\n-            alert(\"Could not open Indexed DB due to error: \" + this.errorCode + \" in \" + key);\n-            reject(\"reject\" + key);\n-        });\n-\n-        idb_request.addEventListener(\"success\", function (event) {\n-            database = this.result;\n-            // console.log(key);\n-            var storage = database.transaction(key, \"readwrite\").objectStore(key);\n-            // console.log(database.objectStoreNames.contains(key));\n-            storage.get(key).addEventListener(\"success\", function (event) {\n-                // var result = this.result;\n-                storage.put(JSON.parse(value), key);\n-                // console.log(key, JSON.parse(value));\n-                // alert(JSON.stringify(value));\n-                resolve(key);\n-            });\n-\n-            // alert(\"Successfully opened database!\");\n-        });\n-\n-    });\n-\n-    return promise.then(function (result) {\n-        return result\n-    })\n-}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1638001461655,
            "name": "Commit-0",
            "content": "var Curentyearforlocalstorage;\nfunction storedatatoIndexdb(Db, key, value) {\n    var promise = new Promise(function (resolve, reject) {\n        var d = new Date();\n        d.setTime(d.getTime() + (360 * 24 * 60 * 60 * 1000));\n        var expires = \"expires=\" + d.toUTCString();\n\n        if (Db.indexOf(Curentyearforlocalstorage) > -1) {\n            if (key == 'SERIES') {\n                localStorage.setItem(key, (value));\n            }\n            if (key == 'COMPMST') {\n                localStorage.setItem(key, (value));\n            }\n            if (key == 'TIME') {\n                localStorage.setItem(key, (value));\n                var TIMEarray = JSON.parse(value);\n                var TIME = TIMEarray[0].TIME;\n                try {\n                    Android.SaveToAndroidTxt(DSN + key, JSON.stringify(value));\n                } catch (error) {\n\n                }\n            }\n        }\n        var database, idb_request;\n\n        idb_request = window.indexedDB.open(Db, 1);\n\n        idb_request.addEventListener(\"error\", function (event) {\n            alert(\"Could not open Indexed DB due to error: \" + this.errorCode + \" in \" + key);\n            reject(\"reject\" + key);\n        });\n\n        idb_request.addEventListener(\"success\", function (event) {\n            database = this.result;\n            // console.log(key);\n            var storage = database.transaction(key, \"readwrite\").objectStore(key);\n            // console.log(database.objectStoreNames.contains(key));\n            storage.get(key).addEventListener(\"success\", function (event) {\n                // var result = this.result;\n                storage.put(JSON.parse(value), key);\n                // console.log(key, JSON.parse(value));\n                // alert(JSON.stringify(value));\n                resolve(key);\n            });\n\n            // alert(\"Successfully opened database!\");\n        });\n\n    });\n\n    return promise.then(function (result) {\n        return result\n    })\n}\n"
        }
    ]
}